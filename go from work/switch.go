package main
 
import (
    "fmt"
)
 
func main() {

	switch num :=6 (инициализатор); num % 2 == 0(выражение) {
	case true: 
		fmt.Println("дичь")
	case false:
		fmt.Println("cbcb")

	
	fmt.Println(num)	

	}
}
-------------------------------
package main
 
import (
    "fmt"
)
 
func main() {
	
	w:= "a  s fe etg fdojun3 er/fsgoijhdu f"
	
	for _, e := range w {
		
	switch e {
	case ' ', '\t':
		break
	default:
		fmt.Printf("%c\n",e)
	
		}
	}


}
---------------------------------------------
Дефолтное значение
package main
 
import (
    "fmt"
	"time"
)
 
func main() {
	

	now := time.Now()
	
	switch {
	case now.Hour() <12: 
		fmt.Println("AM")
		
	default: fmt.Println("PM")
	
	}
}

---------------------------------------------
package main
 
import (
    "fmt"
	"time"
)
 
func main() {
	

	now := time.Now()
	
	switch {
	case now.Hour() >12: 
		fmt.Println("AM")
		fallthrough  -- продолжай выполнение
		
	default: fmt.Println("PM")
	
	}
}

---------------------------------------------
package main

import "fmt"

	func main() {

	var count = 50
	
	for count = 5; count > 0; count-- { --инициализация, условие, операция.
			
	fmt.Println(count)
		
	}
}


---------------------------------------------

сову раскатить с 18го релиза - РОВ
Major.AtmProc_D-01.018.04 (мониторинг) 

---------------------------------------------

запросить ресурсы

---------------------------------------------

18.2 - в субботу, - 
кардлес сириус кор
трафик роут 
для всех коров 

---------------------------------------------
Major.AtmProc_D-01.018.03


---------------------------------------------


third := 1.0 / 3
fmt.Println(third) // Выводит: 0.3333333333333333        
fmt.Printf("%v\n", third) // Выводит: 0.3333333333333333 
fmt.Printf("%f\n", third) // Выводит: 0.333333   
fmt.Printf("%.3f\n", third) // Выводит: 0.333
fmt.Printf("%4.2f\n", third) // Выводит: 0.33  


---------------------------------------------

Тип	Диапазон	Занимаемая память
int8	–128 — 127	8 бит (1 байт)
uint8	0 — 255
int16	–32 768 — 32 767	16 бит (2 байта)
uint16	0 — 65535
int32	–2 147 483 648 — 2 147 483 647	32 бита (4 байта)
uint32	0 — 4 294 967 295
int64	–9 223 372 036 854 775 808 — 9 223 372 036 854 775 807	64 бита (8 байт)


---------------------------------------------


Пять целочисленных типов Go являются подписанными, или знаковыми. Это значит,
что они могут представлять как положительные, так и отрицательные целые числа.

---------------------------------------------
